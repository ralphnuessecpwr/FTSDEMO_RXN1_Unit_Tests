<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 18.3.1.v20180327-2102_9?>
<!--Topaz for Total Test 18.3.1.v20180327-2102_9 06.06.2018 16:20:54-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="0" failureCount="0" testCount="21" testsuite="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test%5C.temp%5CCWXTSUBC_Sales.testsuite"><result:testscenarios errorCount="0" failureCount="0" testCount="21" testscenario="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase1"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="55000.00" expression="BigDecimalCreator.make('55000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3300.00" expression="BigDecimalCreator.make('3300.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase2"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="25000.00" expression="BigDecimalCreator.make('25000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1000.00" expression="BigDecimalCreator.make('1000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase3"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="6000.00" expression="BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase4"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="55550.00" expression="BigDecimalCreator.make('55550.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="3333.00" expression="BigDecimalCreator.make('3333.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase5"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="6000.00" expression="BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase6"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="28000.00" expression="BigDecimalCreator.make('28000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="1120.00" expression="BigDecimalCreator.make('1120.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases><result:testcases errorCount="0" failureCount="0" testCount="3" testcase="../Last%20Execution/CWXTSUBC_Sales.archive#Unit%20Test/Scenarios/CWXTSUBC_Sales.testscenario%23CWXTSUBCCase7"><result:results expectedAssert="=" expectedValue="S" expression="'S' eq output.arg0.EMP_TYPE.EMP_TYPE" name="Check for EMP_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="75000.00" expression="BigDecimalCreator.make('75000.00').compareTo(output.arg1.SALES_AMOUNT.SALES_AMOUNT) eq 0" name="Check for SALES_AMOUNT" result="Success"/><result:results expectedAssert="=" expectedValue="6000.00" expression="BigDecimalCreator.make('6000.00').compareTo(output.arg2.COMM_TOTAL.COMM_TOTAL) eq 0" name="Check for COMM_TOTAL" result="Success"/></result:testcases></result:testscenarios></result:testsuite></result:result>